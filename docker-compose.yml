services:
  frontend:
    image: cinephoria-frontend
    build:
      context: ./frontend
      args:
        API_URL: http://backend:3000/api
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - my_network

  mariadb:
    image: mariadb:11.7.2
    restart: always
    ports:
      - "3307:3306"
    env_file:
      - backend/.env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - my_network

  mongodb:
    image: mongo:5.0
    restart: always
    ports:
      - "27017:27017"
    env_file:
      - backend/.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PWD}
      MONGO_INITDB_DATABASE: admin
    volumes:
      - mongodb_data:/data/db
    networks:
      - my_network

  backend:
    image: cinephoria-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - mariadb
      - mongodb
    env_file:
      - backend/.env
    environment:
      MONGODB_HOST: host.docker.internal
      MYSQL_HOST: host.docker.internal

    networks:
      - my_network

networks:
  my_network:

volumes:
  mariadb_data:
  mongodb_data:
